



Task 1: Create an array containing information about different products, including their
 names, prices, and descriptions.

let products = [
    { name: "Laptop", price: 999.99, description: "Powerful computing on the go" },
    { name: "Smartphone", price: 699.99, description: "Stay connected wherever you are" },
    { name: "Headphones", price: 149.99, description: "Immersive audio experience" }
];





Task 2: Write a function to display the product information on the webpage dynamically.






Task 3: Implement an event listener to trigger the display of products when the page loads.








Expected Outcomes:

Successful creation of an array containing product information.
Proper display of product information on the webpage using JavaScript.
Implementation of an event listener to trigger the display of products upon page load.

-------- Part 2 -----------



Task 1: Create an HTML form with input fields for the user's name, email, and message.



Task 2: Write JavaScript code to handle form submissions and store user input in an object.

for (const element of dataObj) {
    dataObj
    
  }

   formData.forEach((value, key) => {
        dataObj[key] = value;
  });

Task 3: Implement form validation to ensure that all required fields are filled before submission.

Expected Outcomes:

Successful creation of an HTML form with input fields for name, email, and message.
Proper handling of form submissions using JavaScript to capture user input and store it in an object.
Implementation of form validation to ensure that all required fields are filled before submission.


====== Part 3 ========



3. Styling with JavaScript
Objective: The objective of this assignment is to practice manipulating CSS styles dynamically 
using JavaScript.
 By the end of this assignment, students should be able to apply various styling changes to
  HTML elements based on user interaction or other events.

Problem Statement: You are tasked with creating a web page that demonstrates dynamic styling 
using JavaScript. The page should include HTML elements that change their appearance 
in response to user actions or events triggered by JavaScript functions.

Task 1: Create an HTML structure with at least 5 elements that will be styled dynamically.

<div id="box" onclick="changeColor()
">Click me to change color</div>

Done

Task 2: Write JavaScript code to dynamically change the color of the box element when clicked.


Done

Task 3: Implement additional styling changes based on user interaction, such as mouse hover
 effects or button clicks on different HTML elements.






function setup() {
  const elementIds = document.getElementById("myElement");
  const myButton = document.getElementById("myButton");
  myButton.onclick = () => changeColor(elementIds); // Pass elementIds to changeColor
}

function changeColor(elementIds) {
  if (!elementIds) {
    console.error("Element not found");
    return;
  }

  const randomColor = getRandomColor();
  elementIds.style.background = randomColor;
}



Expected Outcomes:

The HTML structure includes an element (e.g., a box) that responds to user interaction.
JavaScript code successfully changes the color of the box element when clicked, providing
 a visual feedback mechanism.
Additional styling changes, such as mouse hover effects or button clicks, are implemented
 to enhance user experience and engagement.

